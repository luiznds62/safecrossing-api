{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Safe Crossing - API",
    "description": "API for integration with IoT device who transfer traffic light status for attempt to help blind people to travel in a more safe way"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY",
      "description": "No need for this yet"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth": {
      "post": {
        "tags": ["Users"],
        "summary": "Authorize an User in the API",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Credentials for authorization",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all Users in system",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "description": "Offset of pagination",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "Limit of entities that the request should return",
            "type": "number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "description": "Sorting expression for the request",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user in system",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The new User to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Validation errors"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update user with given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          {
            "in": "body",
            "name": "user",
            "description": "The User to update",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete user with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NO_CONTENT",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/traffic-lights": {
      "get": {
        "tags": ["TrafficLights"],
        "summary": "Get all Traffic Lights in system",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "description": "Offset of pagination",
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "Limit of entities that the request should return",
            "type": "number"
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "description": "Sorting expression for the request",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          }
        }
      },
      "post": {
        "tags": ["TrafficLights"],
        "summary": "Create a new Traffic Light in system",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The new Traffic Light to create",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          },
          "422": {
            "description": "Validation errors"
          }
        }
      }
    },
    "/traffic-lights/{id}": {
      "get": {
        "tags": ["TrafficLights"],
        "summary": "Get traffic light with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "traffic light with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update traffic light with given ID",
        "tags": ["TrafficLights"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          {
            "in": "body",
            "name": "traffic light",
            "description": "The Traffic Light to update",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrafficLight"
            }
          },
          "422": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete traffic light with given ID",
        "tags": ["TrafficLights"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete traffic light with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NO_CONTENT",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "email": {
          "type": "string",
          "example": "jhondoe@email.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "AuthConfig": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "jhondoe@email.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "email": {
          "type": "string",
          "example": "jhondoe@email.com"
        },
        "accessToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJsdWl6bmRzQGhvdG1haWwuY29tIiwiaXNzIjoic2FmZWNyb3NzaW5nLWFwaSIsImlhdCI6MTYxNTkzODkxNSwiZXhwIjoxNjE1OTQyNTE1fQ.av9AOFhm9c-ZrtrHMbzR8ZTUQCKB5A4uRi1YKEhHjso"
        }
      }
    },
    "TrafficLight": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Semaphore X"
        },
        "coordinates": {
          "type": "string",
          "example": "'-28.706328, -49.294791'"
        },
        "lastStatus": {
          "type": "string",
          "example": "SAFE"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "TrafficLights": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficLight"
          }
        }
      }
    }
  }
}
